<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAwNzAAPDKpgAAIEAAACBgAAAg
        gAAAIKAAACDAAAAg4AAAQAAAAEAgAABAQAAAQGAAAECAAABAoAAAQMAAAEDgAABgAAAAYCAAAGBAAABg
        YAAAYIAAAGCgAABgwAAAYOAAAIAAAACAIAAAgEAAAIBgAACAgAAAgKAAAIDAAACA4AAAoAAAAKAgAACg
        QAAAoGAAAKCAAACgoAAAoMAAAKDgAADAAAAAwCAAAMBAAADAYAAAwIAAAMCgAADAwAAAwOAAAOAAAADg
        IAAA4EAAAOBgAADggAAA4KAAAODAAADg4ABAAAAAQAAgAEAAQABAAGAAQACAAEAAoABAAMAAQADgAEAg
        AABAICAAQCBAAEAgYABAIIAAQCCgAEAgwABAIOAAQEAAAEBAIABAQEAAQEBgAEBAgABAQKAAQEDAAEBA
        4ABAYAAAQGAgAEBgQABAYGAAQGCAAEBgoABAYMAAQGDgAECAAABAgCAAQIBAAECAYABAgIAAQICgAECA
        wABAgOAAQKAAAECgIABAoEAAQKBgAECggABAoKAAQKDAAECg4ABAwAAAQMAgAEDAQABAwGAAQMCAAEDA
        oABAwMAAQMDgAEDgAABA4CAAQOBAAEDgYABA4IAAQOCgAEDgwABA4OAAgAAAAIAAIACAAEAAgABgAIAA
        gACAAKAAgADAAIAA4ACAIAAAgCAgAIAgQACAIGAAgCCAAIAgoACAIMAAgCDgAIBAAACAQCAAgEBAAIBA
        YACAQIAAgECgAIBAwACAQOAAgGAAAIBgIACAYEAAgGBgAIBggACAYKAAgGDAAIBg4ACAgAAAgIAgAICA
        QACAgGAAgICAAICAoACAgMAAgIDgAICgAACAoCAAgKBAAICgYACAoIAAgKCgAICgwACAoOAAgMAAAIDA
        IACAwEAAgMBgAIDAgACAwKAAgMDAAIDA4ACA4AAAgOAgAIDgQACA4GAAgOCAAIDgoACA4MAAgODgAMAA
        AADAACAAwABAAMAAYADAAIAAwACgAMAAwADAAOAAwCAAAMAgIADAIEAAwCBgAMAggADAIKAAwCDAAMAg
        4ADAQAAAwEAgAMBAQADAQGAAwECAAMBAoADAQMAAwEDgAMBgAADAYCAAwGBAAMBgYADAYIAAwGCgAMBg
        wADAYOAAwIAAAMCAIADAgEAAwIBgAMCAgADAgKAAwIDAAMCA4ADAoAAAwKAgAMCgQADAoGAAwKCAAMCg
        oADAoMAAwKDgAMDAAADAwCAAwMBAAMDAYADAwIAAwMCgAPD7/wCkoKAAgICAAAAA/wAA/wAAAP//AP8A
        AAD/AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxqVlZofEAAAAAAPGhWVlZ
        qQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKlRERERERGhAAAAoREREREREakAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAqRERERERERERWQAAERERERERERGpAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADxEREREREREREREVlZERERERERERER8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhEREREVFZ
        ERERERERERERWaFRERERWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRERERWQAAqRERERERERGhAAAA
        WRERUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPERERERsQAAAKEREREREaEAAAAA8REREfEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAPERERERqQAAAGEREREREVkAAAAAsREREfEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABRERERUQAAYRERERERERFZAAAAWRERUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChEREREVnx
        ERERERERERER8QBZERERoQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxURERERHxqREREaGhERGp8VkR
        ERFR8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsRERERFZ8akRoQAAEaHxWRERERGpAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAALERERERWfHxAAAA8fFZEREREakAAAAAAAAAAAAAAAAAAAAAAAAAoVlR
        UVmpAAAAAACxEREREVkAAAAAAFkREREREQAAAAAAAKlRUVGh8QAAAAAAAACpERERERERWQAAAKnxsRER
        ERFZAAAAWRERERERqakAAADxWREREREREakAAAAAAKkREREREREREfEAYRFR8bERERERWQAAERERERGp
        8RFhAPFRERERERERERGpAAAA8VEREREREREREVFZERERUfEREREREVlZEREREanxURERWVERERERERER
        ERFRAAAAoREREVmpoVEREREREREREampERERERERERERqQCpERERERERERGhqVkRERERAAAAWRERWQAA
        APFRERERERERoQAAqRERERERERGpAAAAoREREREREVEAAABZERERAAAAURERqQAAAADxERERERFZAAAA
        AKEREREREaEAAAAAABEREREREakAAACpERERAAAAURERoQAAAAChERERERFR8QAAAFkREREREVkAAAAA
        8REREREREWEAAAChERERAAAAURERoQAAAAChERERERFR8QAAAFkREREREVkAAAAA8REREREREWEAAACh
        ERERAAAAWREREbEAAKERERERERERUfEAWRERERERERFZAADxURERERERERHxALFRERERAAAAsRERERFR
        UREREREREREREalZERERERERERERWQCpERERERERERFRURERERERAAAAAFkREREREREREaHxURERofER
        EREREampEREREVnxoRFRsaERERERERERERFZAAAAAPFREREREREREQAA8VGhAFkRERERqQAAERERERFZ
        8VHxAAChEREREREREVHxAAAAAADxERERERFRqQAAAPHxWRERERGpAAAAqRERERERWfEAAAAAqVERERER
        YfEAAAAAAAAA8ampqfEAAAAAAABZEREREakAAAAAAKkREREREQAAAAAAAACpqanxAAAAAAAAAAAAAAAA
        AAAAAAAAAFkRERERqfFh8QAAYfGpEREREVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYRERERGp
        8VERUfHxEVHxqRERERFZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxERERERHxUREREVFRERFR8akR
        ERERqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZEREREanxERERERERERER8QCpERERWQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABRERERoQAA8VERERERERGxAAAAoRERUQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAPERERER8QAAAKkREREREakAAAAA8REREfEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPFRERERqQAA
        8VkREREREVHxAAAAqREREfEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZERERUbHxURERERERERFR8QCx
        URERUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACpEREREREREREREREREREREVERERERqQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAUREREREREREREbGxERERERERERFRAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8VERERERERFRsQAAUREREREREVHxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChURER
        EVnxAAAA8VkRERERUfEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPHx8QAAAAAAAADx8anx
        8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////AAD///////8AAP///////wAA//wPgf//
        AAD/+AcA//8AAP/wAwB//wAA/+AAAD//AAD/4AAAP/8AAP/gwBw//wAA/8DgPB//AAD/wOA8H/8AAP/g
        wBw//wAA/+AACD//AAD/4AAAP/8AAP/wAwB//wAA//gHAP//AADgfA+B+B8AAMA4BwDgDwAAgBADAEAH
        AAAAAAAAAAcAAAAAAAgABwAADgDAHAOHAAAPAeA+A4cAAA8A4DwDhwAADwDgPAOHAAAGAEAYAQcAAAAA
        AAgABwAAgAAAAAAHAACAMQMAYAcAAMA4BwDwDwAA4PwPgfw/AAD/+AMA//8AAP/wAAB//wAA/+AAAD//
        AAD/4AAIP/8AAP/gwBw//wAA/8DgPB//AAD/wMAcH/8AAP/gAAg//wAA/+AAAD//AAD/8AAAf/8AAP/w
        AwB//wAA//wHAP//AAD//x/B//8AAP///////wAA////////AAD///////8AAP///////wAA
</value>
  </data>
</root>